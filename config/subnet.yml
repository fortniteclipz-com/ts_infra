Resources:

  SubnetRDSA:
    # DependsOn: VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ${self:custom.config.region}a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
  SubnetRouteTableAssociationRDSA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetRDSA

  SubnetRDSB:
    # DependsOn: VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ${self:custom.config.region}b
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
  SubnetRouteTableAssociationRDSB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetRDSB

  SubnetRDSC:
    # DependsOn: VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ${self:custom.config.region}c
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
  SubnetRouteTableAssociationRDSC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetRDSC

  SubnetLambdaA:
    # DependsOn: VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ${self:custom.config.region}a
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: true
  SubnetRouteTableAssociationLambdaA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetLambdaA

  SubnetLambdaB:
    # DependsOn: VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ${self:custom.config.region}b
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: true
  SubnetRouteTableAssociationLambdaB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetLambdaB

  SubnetLambdaC:
    # DependsOn: VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ${self:custom.config.region}c
      CidrBlock: 10.0.5.0/24
      MapPublicIpOnLaunch: true
  SubnetRouteTableAssociationLambdaC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetLambdaC

  SubnetEC2A:
    # DependsOn: VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ${self:custom.config.region}a
      CidrBlock: 10.0.6.0/24
      MapPublicIpOnLaunch: true
  SubnetRouteTableAssociationEC2A:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetEC2A
