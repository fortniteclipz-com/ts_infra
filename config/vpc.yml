Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
  Route:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: RouteTable

  SubnetRDSA:
    # DependsOn: VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ${self:custom.config.region}a
      CidrBlock: 10.0.0.0/22
      MapPublicIpOnLaunch: true
  SubnetRDSB:
    # DependsOn: VPC
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: ${self:custom.config.region}b
      CidrBlock: 10.0.4.0/22
      MapPublicIpOnLaunch: true
  SubnetRouteTableAssociationRDSA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetRDSA
  SubnetRouteTableAssociationRDSB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: SubnetRDSB

  DefaultSecurityGroupIngress3306:
    # DependsOn: VPC
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        "Fn::GetAtt": [VPC, DefaultSecurityGroup]
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      CidrIp: 0.0.0.0/0
